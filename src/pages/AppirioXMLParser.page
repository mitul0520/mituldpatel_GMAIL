<!--  This is the front end page for a XML parser and will take the XML input from the user-->

<apex:page showHeader="true" sidebar="false" tabStyle="XML_Parsing_Tool__tab" controller="AppirioXMLParserController">
    <style>
      div[id$=bodyContainer]
      {
        display:table;
        height:200px;
      }

      div[id$=inputContainer]
      {
        float:left;
        width:50%;
        height:425px;
        background-color:#cccccc;
        display:table-cell;
      }
      div[id$=inputContainer] h5
      {
        padding:0 30%;
      }
      div[id$=inputContainer] input
      {
        padding:0 10px;
        font-weight: normal;
        margin:0 30px;
      }
      div[id$=resultContainer]
      {
        float:right;
        clear:none;
        height:auto;
        background-color: #ff00ff;
        width:50%;
        display:table-cell;
        overflow:scroll;
        height:425px;
      }
      div[id$=resultContainer] h3
      {
        font-size: 16px;
        font-weight: bold;
        color: #6699FF;
      }
      div[id$=resultContainer] h5
      {
        font-size: 14px;
        color: blue;
        font-style: italic;
        padding:30px;
      }
      div[id$=bgContainer]
      {
        width:100%;
        background-color: #ccc;
        height:100%;
        min-height: 100%;
        border:1px #ccc solid;
        position:absolute;
        padding:100px;
        z-index: 9999;
      }
      div[id$=mainContainer]
      {
        position:fixed; 
        top:0; 
        left:0; 
        background:rgba(0,0,0,0.6); 
        z-index:5; 
        width:100%; 
        height:100%; 
        display:none;
      }
      div[id$=bgContainer]h5
      {
        height:100%;
      }
    </style>
    <apex:composition template="AppirioTemplate">
      <apex:define name="header">                                  
         <!--Using custom Label for page header-->
         <apex:sectionHeader title="{!$Label.XMLParser_header}"/>
      </apex:define>
      <apex:define name="body">
          <apex:form >
               <!-- <apex:outputPanel id="bgContainer">
                    <apex:actionStatus id="actStatusId" >
                        <apex:facet name="start" >
                          <img src="/img/loading.gif" />
                          <br/>
                          <h5>Processing</h5>                    
                        </apex:facet>
                    </apex:actionStatus>
                </apex:outputPanel> -->
                <c:WaitingComponent />
              <!--  Using custom Label for page section title-->
              <apex:pageBlock id="inputContainer">
                <h5>{!$Label.XMLParser_title}</h5>
                <apex:pageBlockSection >
                  <apex:inputTextarea cols="{!XMLParserNumColsCount}" rows="{!XMLParserNumRowsCount}" value="{!xmlInput}"/>
                </apex:pageBlockSection>

                <apex:pageBlockButtons location="bottom">
                 <!--  Using custom Label for button name-->
                  <apex:commandButton action="{!parseXML}" value="{!$Label.ParseXML}" reRender="resultContainer" onclick="lockScreen(true)" oncomplete="lockScreen(false)" />       
                </apex:pageBlockButtons>
              </apex:pageBlock>
              <apex:pageBlock id="resultContainer">
                   <apex:pageMessages />
                   <apex:pageBlockSection rendered="{!!isError}">
                      <h4><i>Analysed XML Result</i></h4>
                   </apex:pageBlockSection>
                  
                  <apex:repeat value="{!rtiList}" var="rti">
                    <div>
                      <ul type="none">
                        <li><h3>Record Type: {!rti.rtName}</h3></li>
                        <h5>Active Values</h5>
                        <ul> <!-- Start active values -->
                          <apex:repeat value="{!rti.mapPicklistNameToActiveValues}" var="picklistName">
                            <li>{!picklistName}</li>
                            <ul>
                              <apex:repeat value="{!rti.mapPicklistNameToActiveValues[picklistName]}" var="picklistValue">
                                <li>{!picklistValue}</li>
                              </apex:repeat>
                            </ul>
                          </apex:repeat>
                        </ul> <!-- END Start active values -->

                        <h5>Inactive Values</h5>
                        <ul> <!-- Start inactive values -->
                          <apex:repeat value="{!rti.mapPicklistNameToInactiveValues}" var="picklistName">
                            <li>{!picklistName}</li>
                            <ul>
                              <apex:repeat value="{!rti.mapPicklistNameToInactiveValues[picklistName]}" var="picklistValue">
                                <li>{!picklistValue}</li>
                              </apex:repeat>
                            </ul>
                          </apex:repeat>
                        </ul> <!-- END inactive values --> 
                      </ul>
                    </div>
                  </apex:repeat>
             </apex:pageBlock>
         </apex:form>
         <apex:pageBlock id="mainContainer">
        
        </apex:pageBlock>
     </apex:define>
    </apex:composition>
 
</apex:page>